#summary incomplete_linear_implies(G, H)
incomplete_linear_implies(G, H)
<pre>
Runs in linear time on the size of G and H.
inputs: G and H are formulas.
return: whether G is known to imply H according the methods used by this function 
        (a return value of "false" does not mean that G does not imply H, 
         it merely means that this function does not know that it does).
</pre>
| `if G and H are the same expression`<br>
|........ `or`<br>
|.... `G is "t`,,1,,` = t`,,2,,`" or "not (t`,,1,,` != t`,,2,,`)" and`<br>
|.... `H is "t`,,2,,` = t`,,1,,`" or "not (t`,,2,,` != t`,,1,,`)"`<br>
|........ `or`<br>
|.... `G is "t`,,1,,` = c`,,1,,`" or G is "c`,,1,,` = t`,,1,,`" with c`,,1,,` a constant,`<br>
|.... `and H is "not t`,,1,,` = c`,,2,,`" or H is "not c`,,2,,` = t`,,1,,`" or H is "t`,,1,,` != c`,,2,,`" or H is "c`,,2,,` != t`,,1,,"`<br>
|.... `with c`,,2,,` a constant distinct from c`,,1,,`<br>
|........ `or`<br>
|.... `G is t`,,1,,` != t`,,2,,` or "not (t`,,1,,` = t`,,2,,`)" and H is "t`,,2,,` != t`,,1,,`" or "not (t`,,2,,` = t`,,1,,`)"`<br>
|........ `return true`<br>
| `return false`<br>