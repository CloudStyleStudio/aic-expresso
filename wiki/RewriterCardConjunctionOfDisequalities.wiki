#summary R_card_conjunction_of_disequalities(| F |_X, quantification)
R_card_conjunction_of_disequalities(| F |,,X,,, quantification) - ([http://code.google.com/p/aic-expresso/source/browse/trunk/src/main/java/com/sri/ai/grinder/library/equality/cardinality/direct/core/CardinalityConjunctionOfDisequalities.java implementation])
<pre>
inputs: F is a conjunction of disequalities. Every disequality in F contains at least one index variable in X.
        "quantification" is either "there exists", "for all", or "none".
return: a basic expression equivalent to | F |_X, if quantification is "none".
        If quantification is "for all", returns a counting-solution, the leaves 
            of which may differ from the exact one in the following way: 
            when the exact one is not ||X||, it may be any value but ||X||.
        If quantification is "there exists", returns a counting-solution, the leaves 
            of which may differ from the exact one in the following way: 
            when the exact one is not 0, it may be any value but 0.
</pre>
| if X = {x}:<br>
|.... `if quantification is "for all" and ( ASSUME_DOMAIN_ALWAYS_LARGE or |type(x)| > 0 )`<br>
|........ `return 0`<br>
|.... `if quantification is "there exists" and ( ASSUME_DOMAIN_ALWAYS_LARGE or |type(x)| > k )`<br>
|........ `return `[RewriterSimplify R_simplify]`( |type(x)| )`<br>
|.... `if quantification is "none"`<br>
|........ `return `[RewriterSimplify R_simplify]`( |type(x)| - `[RewriterCardExtensionalSet R_cardExtensionalSet]`(|{t`,,1,,`,...,t`,,k,,`}|) )`<br>
| `if X = {x`,,1,,`, ..., `x,,n,,`}:`<br>
|.... `return `[RewriterSumOverOneVariable R_sum_over_one_variable]`(sum_{x1:True} `[RewriterCardWithQuantification R_card]`( | F |`,,{x2, ..., xn},,`, quantification))`<br>