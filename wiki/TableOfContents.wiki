#summary Table of Contents
  * [Introduction Introduction]
  * [ExpressoOverview Expresso (Representation)]
  * [BrewerOverview Brewer (Parsing)]
  * [GrinderOverview Grinder (Rewriting System)]  
    * [GrinderArithmetic Arithmetic]
    * [GrinderSets Sets]
    * [GrinderLogic Logic]
       * [QuantificationOfFunctionApplications Quantification of Function Applications]
    * [ModelCountingOverview Model Counting]
      * Rewriters
        * [RewriterCard R_card(| F |_{x1, ..., xn})] 
        * [RewriterCardWithQuantification R_card( | F |_X, quantification )]
        * [RewriterSumOverOneVariable R_sum_over_one_variable(sum_{x: Cx} S)]
        * [RewriterCardConjunction R_card_conjunction( | F |_X, quantification )]
        * [RewriterEqualityInConjunction R_equality_in_conjunction(| x_i = t and Phi |_X, quantification)]
        * [RewriterCardConjunctionOfDisequalities R_card_conjunction_of_disequalities(| F |_X, quantification)]
        * [RewriterCardDisjunction R_card_disjunction(| F |_X, quantification)]
        * [RewriterCardImplication R_card_implication(| F |_X, quantification)]
        * [RewriterCardEquivalence R_card_equivalence(| F |_X, quantification)]
        * [RewriterTopSimplify R_top_simplify(F)]
        * [RewriterTopSimplifyDisjunction R_top_simplify_disjunction(F1 or ... or Fn)]
        * [RewriterTopSimplifyConjunction R_top_simplify_conjunction(F1 and ... and Fn)]
        * [RewriterMoveNotIn R_move_not_in(F)]
        * [RewriterTopQuantifierElimination R_top_quantifier_elimination(Qx F)]
        * [RewriterQuantifierElimination R_quantifier_elimination(F)]
        * [RewriterCardExtensionalSet R_cardExtensionalSet( | {t1,...,tn} | )]
        * [RewriterNormalize R_normalize(F)]
        * [RewriterCompleteSimplify R_complete_normalize(F)]
      * Supporting Functions
        * [FunctionNegationHasLessNumberOfDisjuncts negationHasLessNumberOfDisjuncts(F)]
        * [FunctionPickCheapest pick_cheapest( Candidates )]
        * [FunctionSortPair sort_pair(F1, F2)]
        * [FunctionReplaceConjunctAndTopSimplify replace_conjunct_and_top_simplify(F, i, F1 and ... and Fn)]
        * [FunctionAddConjunctAndTopSimplify add_conjunct_and_top_simplify(F, F1 and ... and Fn)]
        * [FunctionReplaceDisjunctAndTopSimplify replace_disjunct_and_top_simplify(F, i, F1 or ... or Fn)]
        * [FunctionAddDisjunctAndTopSimplify add_disjunct_and_top_simplify(F, F1 or ... or Fn)]
        * [FunctionIsContradiction is_contradiction(F)]
        * [FunctionIsTautology is_tautology(F)]
        * [FunctionIncompleteLinearImplies incomplete_linear_implies(G, H)]
        * [FunctionPlusOne plusOne(N)]
        * [FunctionWorstCaseNumberOfDisjuncts worstCaseNumberOfDisjuncts(F)]
        * [FunctionWorstCaseNumberOfDisjunctsWithSign worstCaseNumberOfDisjuncts(F, sign)]
    * [GrinderSubstitute Substituting Expressions]
  * [ConfigurationOptions Configuration Options]
  * For Developers/Contributors
    * [GettingStarted Getting Started]
    * [CodingConventions Coding Conventions]
    * [CreatingARelease Creating a Release]
    * [DeployingDemoApp Deploy Demo]
  * [RoadMap Road Map]
  * [ReleaseHistory Releases]
    * [Release_1_0_1 Release 1.0.1]
  * [Acknowledgements Acknowledgements]