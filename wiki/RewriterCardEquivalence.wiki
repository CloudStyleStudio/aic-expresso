#summary R_card_equivalence(| F |_X, quantification)
R_card_equivalence(| F |,,X,,, quantification)
<pre>
inputs: F is an equivalence of the form "G <=> H".
        "quantification" is either "there exists", "for all", or "none".
return: a basic expression equivalent to | F |_X, if quantification is "none".
        If quantification is "for all", returns a counting-solution, the leaves 
            of which may differ from the exact one in the following way: 
            when the exact one is not ||X||, it may be any value but ||X||.
        If quantification is "there exists", returns a counting-solution, the leaves 
            of which may differ from the exact one in the following way: 
            when the exact one is not 0, it may be any value but 0.
</pre>
| `G <- `[RewriterTopSimplify R_top_simplify]`(G)`<br>
| `H <- `[RewriterTopSimplify R_top_simplify]`(H)`<br>
| `return `[RewriterCardWithQuantification R_card](| [RewriterTopSimplifyConjunction R_top_simplify_conjunction]`(G and H) |`,,X,,`, quantification) +`<br>
|.... [RewriterCardWithQuantification R_card]`(| `[RewriterTopSimplifyConjunction R_top_simplify_conjunction]`(not G and not H) |`,,X,,`, quantification)`<br>